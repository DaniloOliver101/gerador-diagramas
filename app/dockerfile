# Use uma imagem base do Python
FROM python:3.9-slim-buster

# Atualize os pacotes do sistema e instale o Graphviz e dependências necessárias
RUN apt-get update && apt-get install -y --no-install-recommends \
    graphviz \
    && rm -rf /var/lib/apt/lists/*

# Crie um grupo e usuário não-root para maior segurança
RUN groupadd --system appgroup && useradd --system --gid appgroup appuser

# Defina o diretório de trabalho dentro do container
WORKDIR /app

# Copie primeiro apenas o arquivo de requisitos para aproveitar o cache do Docker
COPY requirements.txt /app/

# Instale as dependências do Python
RUN pip install --no-cache-dir -r requirements.txt

# Copie o resto dos arquivos do projeto para o container
COPY . /app/

# Crie a pasta temp para armazenar as imagens temporárias se não existir
RUN mkdir -p /app/temp && chmod 777 /app/temp

# Altere a propriedade do diretório para o usuário não-root
RUN chown -R appuser:appgroup /app

# Troque para o usuário não-root
USER appuser

# Exponha a porta que o Flask utilizará
EXPOSE 5000

# Comando para executar a aplicação quando o container iniciar
# Use a opção host=0.0.0.0 para que o Flask aceite conexões externas ao container
CMD ["python", "-c", "from app import app; app.run(host='0.0.0.0', debug=False)"]